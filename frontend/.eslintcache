[{"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\index.js":"1","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\serviceWorker.js":"2","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\App.js":"3","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\resetPassword.js":"4","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\login.js":"5","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\dashboard.js":"6","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\signup.js":"7"},{"size":367,"mtime":1606837592758,"results":"8","hashOfConfig":"9"},{"size":4499,"mtime":1606836165638,"results":"10","hashOfConfig":"9"},{"size":1694,"mtime":1606973954546,"results":"11","hashOfConfig":"9"},{"size":551,"mtime":1606841971853,"results":"12","hashOfConfig":"9"},{"size":3002,"mtime":1606874939905,"results":"13","hashOfConfig":"9"},{"size":2779,"mtime":1606968122544,"results":"14","hashOfConfig":"9"},{"size":3976,"mtime":1606875847923,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"19yqchr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\index.js",[],["33","34"],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\App.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\resetPassword.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\login.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\dashboard.js",["35"],"import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router';\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {email: '', password: '', loginSuccessful: 0};\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const requestPayload = { email: this.state.email, password: this.state.password }\r\n    //console.log(this.state)\r\n\r\n    fetch('http://localhost:4000/user/login', {\r\n      method: 'POST',\r\n      // Login api does not need to be auth, this header is for api requests that need auth\r\n      headers: {\r\n        'Authorization': 'Bearer' + localStorage.userToken\r\n      },\r\n      // We convert the React state to JSON and send it as the POST body\r\n      body: JSON.stringify(requestPayload)\r\n\r\n    }).then(response => {\r\n      // Store user and token returned by the backend with localStorage, fake the info for now\r\n      localStorage.setItem('currentUser', {user: 'fake', role: 'Admin'});\r\n      localStorage.setItem('userToken', 'asdfasdf24t2');\r\n      // Set loginSuccessful so that render() knows it should redirect to dashboard after login is loginSuccessful\r\n      this.setState({loginSuccessful: 1});\r\n      //console.log(\"Api response: \", response)\r\n      //console.log(\"This.state: \", this.state);\r\n      return response.json();\r\n    });\r\n\r\n    event.preventDefault();\r\n  }\r\n    render() {\r\n      return (\r\n          <form onSubmit={this.handleSubmit}>\r\n              <h3>Dashboard</h3>\r\n\r\n              <div className=\"form-group\">\r\n                  <label>Email address</label>\r\n                  <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" value={this.state.value} onChange={this.handleChange}/>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"password\" value={this.state.value} onChange={this.handleChange}/>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                  <div className=\"custom-control custom-checkbox\">\r\n                      <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                      <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                  </div>\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n              <p className=\"forgot-password text-right\">\r\n                  Forgot <a href=\"/reset-password\">password?</a>\r\n              </p>\r\n          </form>\r\n      );\r\n    }\r\n}\r\n","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\signup.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":18},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]