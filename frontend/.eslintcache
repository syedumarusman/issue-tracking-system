<<<<<<< Updated upstream
[{"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\index.js":"1","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\App.js":"2","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\login.js":"3","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\dashboard.js":"4","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\signup.js":"5","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\_helpers\\axios.js":"6","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\reportIncident.js":"7","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\resetPassword.js":"8","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\_helpers\\PrivateRoute.js":"9","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\tagComponents\\tagsinput.js":"10","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\ListUsers.js":"11","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\EditUser.js":"12","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\ListCategories.js":"13","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\LogOut.js":"14","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\Search.js":"15","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\CreateCategory.js":"16","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\CreateUser.js":"17"},{"size":316,"mtime":1607279092648,"results":"18","hashOfConfig":"19"},{"size":5209,"mtime":1607418932714,"results":"20","hashOfConfig":"19"},{"size":3308,"mtime":1607404716782,"results":"21","hashOfConfig":"19"},{"size":17367,"mtime":1607419823141,"results":"22","hashOfConfig":"19"},{"size":4216,"mtime":1607142383500,"results":"23","hashOfConfig":"19"},{"size":414,"mtime":1607313434528,"results":"24","hashOfConfig":"19"},{"size":7966,"mtime":1607407162079,"results":"25","hashOfConfig":"19"},{"size":1687,"mtime":1607054810624,"results":"26","hashOfConfig":"19"},{"size":866,"mtime":1607313461452,"results":"27","hashOfConfig":"19"},{"size":23549,"mtime":1607279092703,"results":"28","hashOfConfig":"19"},{"size":2260,"mtime":1607412081951,"results":"29","hashOfConfig":"19"},{"size":6297,"mtime":1607411606592,"results":"30","hashOfConfig":"19"},{"size":2294,"mtime":1607401141648,"results":"31","hashOfConfig":"19"},{"size":311,"mtime":1607395686692,"results":"32","hashOfConfig":"19"},{"size":2637,"mtime":1607315513149,"results":"33","hashOfConfig":"19"},{"size":1731,"mtime":1607401249025,"results":"34","hashOfConfig":"19"},{"size":5880,"mtime":1607412573983,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19yqchr",{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\index.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\App.js",["78","79","80","81"],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\login.js",["82","83"],"import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { apiClient } from './_helpers/axios';\r\nimport './styles/table.css'\r\n\r\nexport default class Login extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {email: '', password: '', loginSuccessful: 0, errors: {}};\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const requestPayload = { email: this.state.email, password: this.state.password }\r\n    let errors = {};\r\n\r\n    if (this.validate()){\r\n      const response = await apiClient.post('/user/login', requestPayload).\r\n      then((response) => {\r\n        const responseError = response.data.meta.error;\r\n        if(responseError === undefined){\r\n          localStorage.setItem(\"token\", response.data.meta.token)\r\n          localStorage.setItem(\"userId\", response.data.result.userId)\r\n          localStorage.setItem(\"userName\", response.data.result.name)\r\n          localStorage.setItem(\"userRole\", response.data.result.role)\r\n          localStorage.setItem(\"userEmail\", response.data.result.email)\r\n          \r\n          this.setState({loginSuccessful: 1});  \r\n\r\n        } else {\r\n          errors[\"loginError\"] = response.data.meta.message;\r\n          this.setState({errors: errors});\r\n        }\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  validate = () => {\r\n    let email = this.state.email;\r\n    let password = this.state.password;\r\n    let errors = {};\r\n    let isValid = true;\r\n\r\n    if (email === \"\"){\r\n      isValid = false;\r\n      errors[\"email\"] = \"Email is required.\"\r\n    }\r\n    \r\n    if (password === \"\"){\r\n      isValid = false;\r\n      errors[\"password\"] = \"Password is required.\"\r\n    }\r\n\r\n    this.setState({errors: errors});\r\n\r\n    return isValid;\r\n  }\r\n\r\n    render() {\r\n      // Login is successful, so we should have the homepage/dashboard\r\n      if (this.state.loginSuccessful && localStorage.token){\r\n        return <Redirect to = '/dashboard'/>\r\n      } else {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h3>Login</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"text-danger\">{this.state.errors.loginError}</div>\r\n\r\n\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" value={this.state.value} onChange={this.handleChange}/>\r\n\r\n                    <div className=\"text-danger\">{this.state.errors.email}</div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"password\" value={this.state.value} onChange={this.handleChange}/>\r\n\r\n                    <div className=\"text-danger\">{this.state.errors.password}</div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Forgot <a href=\"/reset-password\">password?</a>\r\n                </p>\r\n            </form>\r\n        );\r\n      }\r\n    }\r\n}\r\n",["84","85"],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\dashboard.js",["86","87","88","89","90"],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\signup.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\_helpers\\axios.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\reportIncident.js",["91","92","93"],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\resetPassword.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\_helpers\\PrivateRoute.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\tagComponents\\tagsinput.js",["94","95","96","97","98","99","100"],"/*\r\n * bootstrap-tagsinput v0.8.0\r\n * \r\n */\r\n\r\n(function ($) {\r\n  \"use strict\";\r\n\r\n  var defaultOptions = {\r\n    tagClass: function(item) {\r\n      return 'badge badge-info';\r\n    },\r\n    focusClass: 'focus',\r\n    itemValue: function(item) {\r\n      return item ? item.toString() : item;\r\n    },\r\n    itemText: function(item) {\r\n      return this.itemValue(item);\r\n    },\r\n    itemTitle: function(item) {\r\n      return null;\r\n    },\r\n    freeInput: true,\r\n    addOnBlur: true,\r\n    maxTags: undefined,\r\n    maxChars: undefined,\r\n    confirmKeys: [13, 44],\r\n    delimiter: ',',\r\n    delimiterRegex: null,\r\n    cancelConfirmKeysOnEmpty: false,\r\n    onTagExists: function(item, $tag) {\r\n      $tag.hide().fadeIn();\r\n    },\r\n    trimValue: false,\r\n    allowDuplicates: false,\r\n    triggerChange: true,\r\n    editOnBackspace: false\r\n  };\r\n\r\n  /**\r\n   * Constructor function\r\n   */\r\n  function TagsInput(element, options) {\r\n    this.isInit = true;\r\n    this.itemsArray = [];\r\n\r\n    this.$element = $(element);\r\n    this.$element.addClass('sr-only');\r\n\r\n    this.isSelect = (element.tagName === 'SELECT');\r\n    this.multiple = (this.isSelect && element.hasAttribute('multiple'));\r\n    this.objectItems = options && options.itemValue;\r\n    this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\r\n    this.name = element.hasAttribute('name') ? this.$element.attr('name') : '';\r\n    this.type = element.hasAttribute('type') ? this.$element.attr('type') : 'text';\r\n    this.inputSize = Math.max(1, this.placeholderText.length);\r\n\r\n    this.$container = $('<div class=\"bootstrap-tagsinput\"></div>');\r\n    this.$input = $('<input type=\"' + this.type + '\" name=\"' + this.name + '\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\r\n\r\n    this.$element.before(this.$container);\r\n\r\n    this.build(options);\r\n    this.isInit = false;\r\n  }\r\n\r\n  TagsInput.prototype = {\r\n    constructor: TagsInput,\r\n\r\n    /**\r\n     * Adds the given item as a new tag. Pass true to dontPushVal to prevent\r\n     * updating the elements val()\r\n     */\r\n    add: function(item, dontPushVal, options) {\r\n      var self = this;\r\n\r\n      if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\r\n        return;\r\n\r\n      // Ignore falsey values, except false\r\n      if (item !== false && !item)\r\n        return;\r\n\r\n      // Trim value\r\n      if (typeof item === \"string\" && self.options.trimValue) {\r\n        item = $.trim(item);\r\n      }\r\n\r\n      // Throw an error when trying to add an object while the itemValue option was not set\r\n      if (typeof item === \"object\" && !self.objectItems)\r\n        throw(\"Can't add objects when itemValue option is not set\");\r\n\r\n      // Ignore strings only containg whitespace\r\n      if (item.toString().match(/^\\s*$/))\r\n        return;\r\n\r\n      // If SELECT but not multiple, remove current tag\r\n      if (self.isSelect && !self.multiple && self.itemsArray.length > 0)\r\n        self.remove(self.itemsArray[0]);\r\n\r\n      if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT') {\r\n        var delimiter = (self.options.delimiterRegex) ? self.options.delimiterRegex : self.options.delimiter;\r\n        var items = item.split(delimiter);\r\n        if (items.length > 1) {\r\n          for (var i = 0; i < items.length; i++) {\r\n            this.add(items[i], true);\r\n          }\r\n\r\n          if (!dontPushVal)\r\n            self.pushVal(self.options.triggerChange);\r\n          return;\r\n        }\r\n      }\r\n\r\n      var itemValue = self.options.itemValue(item),\r\n          itemText = self.options.itemText(item),\r\n          tagClass = self.options.tagClass(item),\r\n          itemTitle = self.options.itemTitle(item);\r\n\r\n      // Ignore items allready added\r\n      var existing = $.grep(self.itemsArray, function(item) { return self.options.itemValue(item) === itemValue; } )[0];\r\n      if (existing && !self.options.allowDuplicates) {\r\n        // Invoke onTagExists\r\n        if (self.options.onTagExists) {\r\n          var $existingTag = $(\".badge\", self.$container).filter(function() { return $(this).data(\"item\") === existing; });\r\n          self.options.onTagExists(item, $existingTag);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // if length greater than limit\r\n      if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\r\n        return;\r\n\r\n      // raise beforeItemAdd arg\r\n      var beforeItemAddEvent = $.Event('beforeItemAdd', { item: item, cancel: false, options: options});\r\n      self.$element.trigger(beforeItemAddEvent);\r\n      if (beforeItemAddEvent.cancel)\r\n        return;\r\n\r\n      // register item in internal array and map\r\n      self.itemsArray.push(item);\r\n\r\n      // add a tag element\r\n\r\n      var $tag = $('<span class=\"' + htmlEncode(tagClass) + (itemTitle !== null ? ('\" title=\"' + itemTitle) : '') + '\">' + htmlEncode(itemText) + '<span data-role=\"remove\"></span></span>');\r\n      $tag.data('item', item);\r\n      self.findInputWrapper().before($tag);\r\n\r\n      // Check to see if the tag exists in its raw or uri-encoded form\r\n      var optionExists = (\r\n        $('option[value=\"' + encodeURIComponent(itemValue).replace(/\"/g, '\\\\\"') + '\"]', self.$element).length ||\r\n        $('option[value=\"' + htmlEncode(itemValue).replace(/\"/g, '\\\\\"') + '\"]', self.$element).length\r\n      );\r\n\r\n      // add <option /> if item represents a value not present in one of the <select />'s options\r\n      if (self.isSelect && !optionExists) {\r\n        var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');\r\n        $option.data('item', item);\r\n        $option.attr('value', itemValue);\r\n        self.$element.append($option);\r\n      }\r\n\r\n      if (!dontPushVal)\r\n        self.pushVal(self.options.triggerChange);\r\n\r\n      // Add class when reached maxTags\r\n      if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\r\n        self.$container.addClass('bootstrap-tagsinput-max');\r\n\r\n      // If using typeahead, once the tag has been added, clear the typeahead value so it does not stick around in the input.\r\n      if ($('.typeahead, .twitter-typeahead', self.$container).length) {\r\n        self.$input.typeahead('val', '');\r\n      }\r\n\r\n      if (this.isInit) {\r\n        self.$element.trigger($.Event('itemAddedOnInit', { item: item, options: options }));\r\n      } else {\r\n        self.$element.trigger($.Event('itemAdded', { item: item, options: options }));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes the given item. Pass true to dontPushVal to prevent updating the\r\n     * elements val()\r\n     */\r\n    remove: function(item, dontPushVal, options) {\r\n      var self = this;\r\n\r\n      if (self.objectItems) {\r\n        if (typeof item === \"object\")\r\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  self.options.itemValue(item); } );\r\n        else\r\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  item; } );\r\n\r\n        item = item[item.length-1];\r\n      }\r\n\r\n      if (item) {\r\n        var beforeItemRemoveEvent = $.Event('beforeItemRemove', { item: item, cancel: false, options: options });\r\n        self.$element.trigger(beforeItemRemoveEvent);\r\n        if (beforeItemRemoveEvent.cancel)\r\n          return;\r\n\r\n        $('.badge', self.$container).filter(function() { return $(this).data('item') === item; }).remove();\r\n        $('option', self.$element).filter(function() { return $(this).data('item') === item; }).remove();\r\n        if($.inArray(item, self.itemsArray) !== -1)\r\n          self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\r\n      }\r\n\r\n      if (!dontPushVal)\r\n        self.pushVal(self.options.triggerChange);\r\n\r\n      // Remove class when reached maxTags\r\n      if (self.options.maxTags > self.itemsArray.length)\r\n        self.$container.removeClass('bootstrap-tagsinput-max');\r\n\r\n      self.$element.trigger($.Event('itemRemoved',  { item: item, options: options }));\r\n    },\r\n\r\n    /**\r\n     * Removes all items\r\n     */\r\n    removeAll: function() {\r\n      var self = this;\r\n\r\n      $('.badge', self.$container).remove();\r\n      $('option', self.$element).remove();\r\n\r\n      while(self.itemsArray.length > 0)\r\n        self.itemsArray.pop();\r\n\r\n      self.pushVal(self.options.triggerChange);\r\n    },\r\n\r\n    /**\r\n     * Refreshes the tags so they match the text/value of their corresponding\r\n     * item.\r\n     */\r\n    refresh: function() {\r\n      var self = this;\r\n      $('.badge', self.$container).each(function() {\r\n        var $tag = $(this),\r\n            item = $tag.data('item'),\r\n            itemValue = self.options.itemValue(item),\r\n            itemText = self.options.itemText(item),\r\n            tagClass = self.options.tagClass(item);\r\n\r\n          // Update tag's class and inner text\r\n          $tag.attr('class', null);\r\n          $tag.addClass('badge ' + htmlEncode(tagClass));\r\n          $tag.contents().filter(function() {\r\n            return this.nodeType == 3;\r\n          })[0].nodeValue = htmlEncode(itemText);\r\n\r\n          if (self.isSelect) {\r\n            var option = $('option', self.$element).filter(function() { return $(this).data('item') === item; });\r\n            option.attr('value', itemValue);\r\n          }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Returns the items added as tags\r\n     */\r\n    items: function() {\r\n      return this.itemsArray;\r\n    },\r\n\r\n    /**\r\n     * Assembly value by retrieving the value of each item, and set it on the\r\n     * element.\r\n     */\r\n    pushVal: function() {\r\n      var self = this,\r\n          val = $.map(self.items(), function(item) {\r\n            return self.options.itemValue(item).toString();\r\n          });\r\n\r\n      self.$element.val( val.join(self.options.delimiter) );\r\n\r\n      if (self.options.triggerChange)\r\n        self.$element.trigger('change');\r\n    },\r\n\r\n    /**\r\n     * Initializes the tags input behaviour on the element\r\n     */\r\n    build: function(options) {\r\n      var self = this;\r\n\r\n      self.options = $.extend({}, defaultOptions, options);\r\n      // When itemValue is set, freeInput should always be false\r\n      if (self.objectItems)\r\n        self.options.freeInput = false;\r\n\r\n      makeOptionItemFunction(self.options, 'itemValue');\r\n      makeOptionItemFunction(self.options, 'itemText');\r\n      makeOptionFunction(self.options, 'tagClass');\r\n\r\n      // Typeahead Bootstrap version 2.3.2\r\n      if (self.options.typeahead) {\r\n        var typeahead = self.options.typeahead || {};\r\n\r\n        makeOptionFunction(typeahead, 'source');\r\n\r\n        self.$input.typeahead($.extend({}, typeahead, {\r\n          source: function (query, process) {\r\n            function processItems(items) {\r\n              var texts = [];\r\n\r\n              for (var i = 0; i < items.length; i++) {\r\n                var text = self.options.itemText(items[i]);\r\n                map[text] = items[i];\r\n                texts.push(text);\r\n              }\r\n              process(texts);\r\n            }\r\n\r\n            this.map = {};\r\n            var map = this.map,\r\n                data = typeahead.source(query);\r\n\r\n            if ($.isFunction(data.success)) {\r\n              // support for Angular callbacks\r\n              data.success(processItems);\r\n            } else if ($.isFunction(data.then)) {\r\n              // support for Angular promises\r\n              data.then(processItems);\r\n            } else {\r\n              // support for functions and jquery promises\r\n              $.when(data)\r\n               .then(processItems);\r\n            }\r\n          },\r\n          updater: function (text) {\r\n            self.add(this.map[text]);\r\n            return this.map[text];\r\n          },\r\n          matcher: function (text) {\r\n            return (text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1);\r\n          },\r\n          sorter: function (texts) {\r\n            return texts.sort();\r\n          },\r\n          highlighter: function (text) {\r\n            var regex = new RegExp( '(' + this.query + ')', 'gi' );\r\n            return text.replace( regex, \"<strong>$1</strong>\" );\r\n          }\r\n        }));\r\n      }\r\n\r\n      // typeahead.js\r\n      if (self.options.typeaheadjs) {\r\n        // Determine if main configurations were passed or simply a dataset\r\n        var typeaheadjs = self.options.typeaheadjs;\r\n        if (!$.isArray(typeaheadjs)) {\r\n            typeaheadjs = [null, typeaheadjs];\r\n        }\r\n\r\n        $.fn.typeahead.apply(self.$input, typeaheadjs).on('typeahead:selected', $.proxy(function (obj, datum, name) {\r\n          var index = 0;\r\n          typeaheadjs.some(function(dataset, _index) {\r\n            if (dataset.name === name) {\r\n              index = _index;\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n\r\n          // @TODO Dep: https://github.com/corejavascript/typeahead.js/issues/89\r\n          if (typeaheadjs[index].valueKey) {\r\n            self.add(datum[typeaheadjs[index].valueKey]);\r\n          } else {\r\n            self.add(datum);\r\n          }\r\n\r\n          self.$input.typeahead('val', '');\r\n        }, self));\r\n      }\r\n\r\n      self.$container.on('click', $.proxy(function(event) {\r\n        if (! self.$element.attr('disabled')) {\r\n          self.$input.removeAttr('disabled');\r\n        }\r\n        self.$input.focus();\r\n      }, self));\r\n\r\n        if (self.options.addOnBlur && self.options.freeInput) {\r\n          self.$input.on('focusout', $.proxy(function(event) {\r\n              // HACK: only process on focusout when no typeahead opened, to\r\n              //       avoid adding the typeahead text as tag\r\n              if ($('.typeahead, .twitter-typeahead', self.$container).length === 0) {\r\n                self.add(self.$input.val());\r\n                self.$input.val('');\r\n              }\r\n          }, self));\r\n        }\r\n\r\n      // Toggle the 'focus' css class on the container when it has focus\r\n      self.$container.on({\r\n        focusin: function() {\r\n          self.$container.addClass(self.options.focusClass);\r\n        },\r\n        focusout: function() {\r\n          self.$container.removeClass(self.options.focusClass);\r\n        },\r\n      });\r\n\r\n      self.$container.on('keydown', 'input', $.proxy(function(event) {\r\n        var $input = $(event.target),\r\n            $inputWrapper = self.findInputWrapper();\r\n\r\n        if (self.$element.attr('disabled')) {\r\n          self.$input.attr('disabled', 'disabled');\r\n          return;\r\n        }\r\n\r\n        switch (event.which) {\r\n          // BACKSPACE\r\n          case 8:\r\n            if (doGetCaretPosition($input[0]) === 0) {\r\n              var prev = $inputWrapper.prev();\r\n              if (prev.length) {\r\n                if (self.options.editOnBackspace === true) {\r\n                  $input.val(prev.data('item'));\r\n                }\r\n                self.remove(prev.data('item'));\r\n              }\r\n            }\r\n            break;\r\n\r\n          // DELETE\r\n          case 46:\r\n            if (doGetCaretPosition($input[0]) === 0) {\r\n              var next = $inputWrapper.next();\r\n              if (next.length) {\r\n                self.remove(next.data('item'));\r\n              }\r\n            }\r\n            break;\r\n\r\n          // LEFT ARROW\r\n          case 37:\r\n            // Try to move the input before the previous tag\r\n            var $prevTag = $inputWrapper.prev();\r\n            if ($input.val().length === 0 && $prevTag[0]) {\r\n              $prevTag.before($inputWrapper);\r\n              $input.focus();\r\n            }\r\n            break;\r\n          // RIGHT ARROW\r\n          case 39:\r\n            // Try to move the input after the next tag\r\n            var $nextTag = $inputWrapper.next();\r\n            if ($input.val().length === 0 && $nextTag[0]) {\r\n              $nextTag.after($inputWrapper);\r\n              $input.focus();\r\n            }\r\n            break;\r\n         default:\r\n             // ignore\r\n         }\r\n\r\n        // Reset internal input's size\r\n        var textLength = $input.val().length,\r\n            wordSpace = Math.ceil(textLength / 5),\r\n            size = textLength + wordSpace + 1;\r\n        $input.attr('size', Math.max(this.inputSize, size));\r\n      }, self));\r\n\r\n      self.$container.on('keypress', 'input', $.proxy(function(event) {\r\n         var $input = $(event.target);\r\n\r\n         if (self.$element.attr('disabled')) {\r\n            self.$input.attr('disabled', 'disabled');\r\n            return;\r\n         }\r\n\r\n         var text = $input.val(),\r\n         maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\r\n         if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached)) {\r\n            // Only attempt to add a tag if there is data in the field\r\n            if (text.length !== 0) {\r\n               self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\r\n               $input.val('');\r\n            }\r\n\r\n            // If the field is empty, let the event triggered fire as usual\r\n            if (self.options.cancelConfirmKeysOnEmpty === false) {\r\n                event.preventDefault();\r\n            }\r\n         }\r\n\r\n         // Reset internal input's size\r\n         var textLength = $input.val().length,\r\n            wordSpace = Math.ceil(textLength / 5),\r\n            size = textLength + wordSpace + 1;\r\n         $input.attr('size', Math.max(this.inputSize, size));\r\n      }, self));\r\n\r\n      // Remove icon clicked\r\n      self.$container.on('click', '[data-role=remove]', $.proxy(function(event) {\r\n        if (self.$element.attr('disabled')) {\r\n          return;\r\n        }\r\n        self.remove($(event.target).closest('.badge').data('item'));\r\n      }, self));\r\n\r\n      // Only add existing value as tags when using strings as tags\r\n      if (self.options.itemValue === defaultOptions.itemValue) {\r\n        if (self.$element[0].tagName === 'INPUT') {\r\n            self.add(self.$element.val());\r\n        } else {\r\n          $('option', self.$element).each(function() {\r\n            self.add($(this).attr('value'), true);\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes all tagsinput behaviour and unregsiter all event handlers\r\n     */\r\n    destroy: function() {\r\n      var self = this;\r\n\r\n      // Unbind events\r\n      self.$container.off('keypress', 'input');\r\n      self.$container.off('click', '[role=remove]');\r\n\r\n      self.$container.remove();\r\n      self.$element.removeData('tagsinput');\r\n      self.$element.show();\r\n    },\r\n\r\n    /**\r\n     * Sets focus on the tagsinput\r\n     */\r\n    focus: function() {\r\n      this.$input.focus();\r\n    },\r\n\r\n    /**\r\n     * Returns the internal input element\r\n     */\r\n    input: function() {\r\n      return this.$input;\r\n    },\r\n\r\n    /**\r\n     * Returns the element which is wrapped around the internal input. This\r\n     * is normally the $container, but typeahead.js moves the $input element.\r\n     */\r\n    findInputWrapper: function() {\r\n      var elt = this.$input[0],\r\n          container = this.$container[0];\r\n      while(elt && elt.parentNode !== container)\r\n        elt = elt.parentNode;\r\n\r\n      return $(elt);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Register JQuery plugin\r\n   */\r\n  $.fn.tagsinput = function(arg1, arg2, arg3) {\r\n    var results = [];\r\n\r\n    this.each(function() {\r\n      var tagsinput = $(this).data('tagsinput');\r\n      // Initialize a new tags input\r\n      if (!tagsinput) {\r\n          tagsinput = new TagsInput(this, arg1);\r\n          $(this).data('tagsinput', tagsinput);\r\n          results.push(tagsinput);\r\n\r\n          if (this.tagName === 'SELECT') {\r\n              $('option', $(this)).attr('selected', 'selected');\r\n          }\r\n\r\n          // Init tags from $(this).val()\r\n          $(this).val($(this).val());\r\n      } else if (!arg1 && !arg2) {\r\n          // tagsinput already exists\r\n          // no function, trying to init\r\n          results.push(tagsinput);\r\n      } else if(tagsinput[arg1] !== undefined) {\r\n          // Invoke function on existing tags input\r\n            if(tagsinput[arg1].length === 3 && arg3 !== undefined){\r\n               var retVal = tagsinput[arg1](arg2, null, arg3);\r\n            }else{\r\n               var retVal = tagsinput[arg1](arg2);\r\n            }\r\n          if (retVal !== undefined)\r\n              results.push(retVal);\r\n      }\r\n    });\r\n\r\n    if ( typeof arg1 == 'string') {\r\n      // Return the results from the invoked function calls\r\n      return results.length > 1 ? results : results[0];\r\n    } else {\r\n      return results;\r\n    }\r\n  };\r\n\r\n  $.fn.tagsinput.Constructor = TagsInput;\r\n\r\n  /**\r\n   * Most options support both a string or number as well as a function as\r\n   * option value. This function makes sure that the option with the given\r\n   * key in the given options is wrapped in a function\r\n   */\r\n  function makeOptionItemFunction(options, key) {\r\n    if (typeof options[key] !== 'function') {\r\n      var propertyName = options[key];\r\n      options[key] = function(item) { return item[propertyName]; };\r\n    }\r\n  }\r\n  function makeOptionFunction(options, key) {\r\n    if (typeof options[key] !== 'function') {\r\n      var value = options[key];\r\n      options[key] = function() { return value; };\r\n    }\r\n  }\r\n  /**\r\n   * HtmlEncodes the given value\r\n   */\r\n  var htmlEncodeContainer = $('<div />');\r\n  function htmlEncode(value) {\r\n    if (value) {\r\n      return htmlEncodeContainer.text(value).html();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the position of the caret in the given input field\r\n   * http://flightschool.acylt.com/devnotes/caret-position-woes/\r\n   */\r\n  function doGetCaretPosition(oField) {\r\n    var iCaretPos = 0;\r\n    if (document.selection) {\r\n      oField.focus ();\r\n      var oSel = document.selection.createRange();\r\n      oSel.moveStart ('character', -oField.value.length);\r\n      iCaretPos = oSel.text.length;\r\n    } else if (oField.selectionStart || oField.selectionStart == '0') {\r\n      iCaretPos = oField.selectionStart;\r\n    }\r\n    return (iCaretPos);\r\n  }\r\n\r\n  /**\r\n    * Returns boolean indicates whether user has pressed an expected key combination.\r\n    * @param object keyPressEvent: JavaScript event object, refer\r\n    *     http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\n    * @param object lookupList: expected key combinations, as in:\r\n    *     [13, {which: 188, shiftKey: true}]\r\n    */\r\n  function keyCombinationInList(keyPressEvent, lookupList) {\r\n      var found = false;\r\n      $.each(lookupList, function (index, keyCombination) {\r\n          if (typeof (keyCombination) === 'number' && keyPressEvent.which === keyCombination) {\r\n              found = true;\r\n              return false;\r\n          }\r\n\r\n          if (keyPressEvent.which === keyCombination.which) {\r\n              var alt = !keyCombination.hasOwnProperty('altKey') || keyPressEvent.altKey === keyCombination.altKey,\r\n                  shift = !keyCombination.hasOwnProperty('shiftKey') || keyPressEvent.shiftKey === keyCombination.shiftKey,\r\n                  ctrl = !keyCombination.hasOwnProperty('ctrlKey') || keyPressEvent.ctrlKey === keyCombination.ctrlKey;\r\n              if (alt && shift && ctrl) {\r\n                  found = true;\r\n                  return false;\r\n              }\r\n          }\r\n      });\r\n\r\n      return found;\r\n  }\r\n\r\n  /**\r\n   * Initialize tagsinput behaviour on inputs and selects which have\r\n   * data-role=tagsinput\r\n   */\r\n  $(function() {\r\n    $(\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\").tagsinput();\r\n  });\r\n})(window.jQuery);\r\n","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\ListUsers.js",["101","102"],"import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router';\r\nimport { Button } from 'react-bootstrap';\r\nimport { apiClient } from '../_helpers/axios';\r\n\r\nexport default class ListUsers extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {redirect: false, tableBody: null};\r\n  }\r\n\r\n  componentDidMount() {\r\n   this.TableBody();\r\n  }\r\n\r\n  TableHeader(item) {\r\n    return (            \r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n  TableItem(item) {\r\n    return (\r\n      <tr key={item._id}>\r\n        <td>{item._id}</td>\r\n        <td>{item.name}</td>\r\n        <td>{item.email}</td>\r\n        <td>{item.role}</td>\r\n        <td>\r\n          <a href={\"/EditUser/\"+ item._id} className=\"btn btn-gradient blue mini text-white\">Edit</a>\r\n          <button onClick={this.deleteHandler} value={item._id} className=\"btn btn-gradient red mini text-white\">Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  async TableBody () { \r\n    const response = await apiClient.get('/user/');\r\n    const incidents = response.data.data;\r\n    const tableItems = incidents.map((item) => this.TableItem(item));\r\n    const tableHeader = this.TableHeader();\r\n    this.setState({tableBody: (\r\n      <tbody>\r\n        {tableItems}\r\n      </tbody>\r\n    )})\r\n  }\r\n\r\n  viewHandler(event) {\r\n\r\n  }\r\n\r\n  editHandler(event) {\r\n\r\n  }\r\n  \r\n  async deleteHandler(event) {\r\n    //alert(\"User ID is \"+ event.target.value);\r\n    const response = await apiClient.delete('/user', { data: { _id: event.target.value } } );\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({redirect: '/anyURL'})\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if(this.state.redirect){\r\n      return <Redirect to={this.state.redirect}></Redirect>\r\n    }\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div>\r\n          {this.renderRedirect()}\r\n          <h3>Users</h3>\r\n          <Button variant=\"primary\" href='/createUser'>+ Create new user</Button>\r\n          <table className=\"contentTable\">\r\n            {this.TableHeader()}\r\n            {this.state.tableBody}\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n}","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\EditUser.js",["103"],"import React, { Component } from \"react\";\r\nimport { Alert, Form } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport { apiClient } from '../_helpers/axios';\r\n\r\nexport default class EditUser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {name: '', email: '', role: '', password: '', confirmPassword: '', errors: {}, updateUserSuccessful: 0, showSuccess: false, showFailure: false};\r\n      }\r\n\r\n      componentDidMount = async () => {\r\n        const response = await apiClient.get('/user/' + this.props.match.params.id);\r\n        this.setState({\r\n            name: response.data.data.name,\r\n            role: response.data.data.role,\r\n            email: response.data.data.email,\r\n            password: response.data.data.password,\r\n            confirmPassword: response.data.data.password\r\n            })\r\n      }\r\n    \r\n      handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n      }\r\n    \r\n      handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const requestPayload = { userId: this.props.match.params.id, name: this.state.name, role: this.state.role, email: this.state.email, password: this.state.password }\r\n\r\n        if (this.validate()){\r\n            try {\r\n                await apiClient.put('/user/' + this.props.match.params.id, requestPayload);\r\n                this.setState({updateUserSuccessful: 1, showSuccess: true});\r\n            }\r\n            catch(err){\r\n                this.setState({showFailure: true})\r\n            }\r\n         }\r\n    \r\n      }\r\n\r\n      // Validate function - Validates both password and confirm password fields.\r\n      validate = () => {\r\n          let name = this.state.name;\r\n          let email = this.state.email;\r\n          let role = this.state.role;\r\n          let password = this.state.password;\r\n          let confirmPassword = this.state.confirmPassword;\r\n          let errors = {};\r\n          let isValid = true;\r\n\r\n          if (name === \"\"){\r\n              isValid = false;\r\n              errors[\"name\"] = \"Name is required.\";\r\n          }\r\n\r\n          if (role === ''){\r\n              isValid = false;\r\n              errors[\"role\"] = \"Role is required.\";\r\n          }\r\n\r\n          if (email === \"\"){\r\n              isValid = false;\r\n              errors[\"email\"] = \"Email is required.\";\r\n          }\r\n\r\n          if (password === \"\"){\r\n              isValid = false;\r\n              errors[\"password\"] = \"Password is required.\";\r\n          }\r\n\r\n          if (confirmPassword === \"\"){\r\n              isValid = false;\r\n              errors[\"confirmPassword\"] = \"Confirm Password is required.\";\r\n          }\r\n          \r\n          if (password !== confirmPassword){\r\n            isValid = false;\r\n            errors[\"password\"] = \"Passwords don't match.\";\r\n          }\r\n\r\n          // Update the state errors.\r\n          this.setState({errors: errors});\r\n\r\n          return isValid;\r\n      }\r\n\r\n    render() {\r\n        if (this.state.updateUserSuccessful){\r\n            return <Redirect to = '/ListUsers'/>\r\n          } else {\r\n            return (\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <Alert show={this.state.showSuccess} variant=\"success\" dismissible>\r\n                        Successfully edited {this.state.name}\r\n                        </Alert>\r\n                        <Alert show={this.state.showFailure} variant=\"danger\" dismissible>\r\n                            Failure to edit {this.state.name}\r\n                        </Alert>\r\n                        <h3>Edit User {this.props.match.params.id}</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Full Name</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Full name\" value={this.state.name} onChange={this.handleChange}/>\r\n\r\n                            <div className=\"text-danger\">{this.state.errors.name}</div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Role</label>\r\n                            {/* <input type=\"role\" className=\"form-control\" name=\"role\" placeholder=\"Enter role\" value={this.state.role} onChange={this.handleChange}/> */}\r\n                            <select className=\"form-control\" name=\"role\" value={this.state.role} onChange={this.handleChange}>\r\n                                <option value='customer'>Customer</option>\r\n                                <option value='employee'>Employee</option>\r\n                                <option value='admin'>Admin</option>\r\n                            </select>\r\n\r\n                            <div className=\"text-danger\">{this.state.errors.role}</div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleChange}/>\r\n\r\n                            <div className=\"text-danger\">{this.state.errors.email}</div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            \r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Enter password\" value={this.state.password} onChange={this.handleChange}/>\r\n\r\n                            <div className=\"text-danger\">{this.state.errors.password}</div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Confirm Password</label>\r\n                            <input type=\"password\" className=\"form-control\" name=\"confirmPassword\" placeholder=\"Enter password\" value={this.state.password} onChange={this.handleChange}/>\r\n\r\n                            <div className=\"text-danger\">{this.state.errors.confirmPassword}</div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\" >Save</button>\r\n                    </form>\r\n            );\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\ListCategories.js",["104"],"import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router';\r\nimport { apiClient } from '../_helpers/axios';\r\n\r\nexport default class ListCategories extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {redirect: false, tableBody: null, showEmptyRow: false};\r\n  }\r\n\r\n  componentDidMount() {\r\n   this.TableBody();\r\n  }\r\n\r\n  TableHeader(item) {\r\n    return (            \r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n  TableItem(item) {\r\n    return (\r\n      <tr key={item._id}>\r\n        <td>{item.name}</td>\r\n        <td>\r\n          <button value={item._id} onClick={this.deleteHandler} className=\"btn btn-gradient red mini text-white\">Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  emptyItem = () => {\r\n    return (\r\n      <tr>\r\n        <td colSpan=\"2\">\r\n          No categories found.\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  async TableBody () {\r\n    const response = await apiClient.get('/category/');\r\n    const incidents = response.data.data;\r\n    if (incidents.length === 0){\r\n      this.setState({showEmptyRow: true})\r\n      const tableItems = this.emptyItem();\r\n      this.setState({tableBody: (\r\n        <tbody>\r\n          {tableItems}\r\n        </tbody>\r\n      )})\r\n    } else{\r\n      const tableItems = incidents.map((item) => this.TableItem(item));\r\n      const tableHeader = this.TableHeader();\r\n      this.setState({tableBody: (\r\n        <tbody>\r\n          {tableItems}\r\n        </tbody>\r\n      )})\r\n    }\r\n  }\r\n\r\n  viewHandler(event) {\r\n\r\n  }\r\n\r\n  editHandler(event) {\r\n\r\n  }\r\n  \r\n  async deleteHandler(event) {\r\n    await apiClient.delete('/category/' + event.target.value).then((response) => {\r\n      window.location.reload()\r\n    });\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({redirect: '/anywhere'})\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if(this.state.redirect){\r\n      return <Redirect to={this.state.redirect}></Redirect>\r\n    }\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div>\r\n          {this.renderRedirect()}\r\n          <h3>Categories</h3>\r\n          <table className=\"contentTable\">\r\n            {this.TableHeader()}\r\n            {this.state.tableBody}\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n}","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\LogOut.js",[],"C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\Search.js",["105","106"],"import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router';\r\nimport { apiClient } from '../_helpers/axios';\r\n\r\nexport default class Search extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {redirect: false, tableBody: null};\r\n  }\r\n\r\n  componentDidMount() {\r\n    alert(\"Search for \"+ this.props.match.params.query +\" in \"+ this.props.match.params.scope);\r\n    this.TableBody();\r\n  }\r\n\r\n  TableHeader(item) {\r\n    return (            \r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n  TableItem(item) {\r\n    return (\r\n      <tr key={item._id}>\r\n        <td>{item._id}</td>\r\n        <td>{item.name}</td>\r\n        <td>{item.email}</td>\r\n        <td>{item.role}</td>\r\n        <td>\r\n          <a href={\"/EditUser/\"+ item._id} className=\"btn btn-gradient blue mini text-white\">Edit</a>\r\n          <button onClick={this.deleteHandler} value={item._id} className=\"btn btn-gradient red mini text-white\">Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  async TableBody () {\r\n    //test data, this should be provided by backend\r\n    // const incidents = [\r\n    //     { _id: 1, name: \"Asf Jsf\", email: 'asdf@sfasdf.com', role: 'admin' },\r\n    //     { _id: 2, name: \"Asf Jsf\", email: 'asdf@sfasdf.com', role: 'admin' },\r\n    //     { _id: 3, name: \"Asf Jsf\", email: 'asdf@sfasdf.com', role: 'admin' },\r\n    // ]; \r\n    const response = await apiClient.get('/user/');\r\n    const incidents = response.data.data;\r\n    const tableItems = incidents.map((item) => this.TableItem(item));\r\n    const tableHeader = this.TableHeader();\r\n    this.setState({tableBody: (\r\n      <tbody>\r\n        {tableItems}\r\n      </tbody>\r\n    )})\r\n  }\r\n\r\n  viewHandler(event) {\r\n\r\n  }\r\n\r\n  editHandler(event) {\r\n\r\n  }\r\n  \r\n  async deleteHandler(event) {\r\n    alert(\"User ID is \"+ event.target.value);\r\n    const response = await apiClient.delete('/user', { data: { _id: event.target.value } } );\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({redirect: '/anyURL'})\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if(this.state.redirect){\r\n      return <Redirect to={this.state.redirect}></Redirect>\r\n    }\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div>\r\n          {this.renderRedirect()}\r\n          <h3>Search for {this.props.match.params.query} in {this.props.match.params.scope}</h3>\r\n          <table className=\"contentTable\">\r\n            {this.TableHeader()}\r\n            {this.state.tableBody}\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n}","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\CreateCategory.js",["107"],"import React, { Component } from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\nimport { apiClient } from '../_helpers/axios';\r\n\r\nexport default class CreateCategory extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {category: '', showSuccess: false, showFailure: false};\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const requestPayload = { name: this.state.category} \r\n        try {\r\n            const response = await apiClient.post('/category/', requestPayload );\r\n            this.setState({showSuccess: true});\r\n            this.setState({category: ''})\r\n        } catch(err) {\r\n            this.setState({showFailure: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <Alert show={this.state.showSuccess} variant=\"success\" dismissible>\r\n                    Successfully created a category!\r\n                </Alert>\r\n                <Alert show={this.state.showFailure} variant=\"danger\" dismissible>\r\n                    Failure to create a category!\r\n                </Alert>\r\n                <h3>Create Category</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Category</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"category\" placeholder=\"Enter category name\" value={this.state.category} onChange={this.handleChange}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\TheEpicWarrior\\Desktop\\IncidentProj\\issue-tracking-system\\frontend\\src\\components\\CreateUser.js",["108"],{"ruleId":"109","severity":1,"message":"110","line":6,"column":36,"nodeType":"111","messageId":"112","endLine":6,"endColumn":47},{"ruleId":"109","severity":1,"message":"113","line":6,"column":49,"nodeType":"111","messageId":"112","endLine":6,"endColumn":57},{"ruleId":"109","severity":1,"message":"114","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":63,"column":9,"nodeType":"117","endLine":63,"endColumn":95},{"ruleId":"109","severity":1,"message":"118","line":22,"column":13,"nodeType":"111","messageId":"112","endLine":22,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":22,"column":75,"nodeType":"121","messageId":"122","endLine":22,"endColumn":76,"fix":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"109","severity":1,"message":"128","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":18},{"ruleId":"109","severity":1,"message":"129","line":3,"column":25,"nodeType":"111","messageId":"112","endLine":3,"endColumn":29},{"ruleId":"109","severity":1,"message":"130","line":33,"column":11,"nodeType":"111","messageId":"112","endLine":33,"endColumn":21},{"ruleId":"109","severity":1,"message":"131","line":34,"column":11,"nodeType":"111","messageId":"112","endLine":34,"endColumn":25},{"ruleId":"109","severity":1,"message":"118","line":273,"column":15,"nodeType":"111","messageId":"112","endLine":273,"endColumn":23},{"ruleId":"109","severity":1,"message":"118","line":63,"column":19,"nodeType":"111","messageId":"112","endLine":63,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":162,"column":67,"nodeType":"134","messageId":"135","endLine":162,"endColumn":69},{"ruleId":"132","severity":1,"message":"133","line":162,"column":104,"nodeType":"134","messageId":"135","endLine":162,"endColumn":106},{"ruleId":"136","severity":1,"message":"137","line":7,"column":3,"nodeType":"138","messageId":"139","endLine":7,"endColumn":16,"fix":"140"},{"ruleId":"141","severity":1,"message":"142","line":91,"column":9,"nodeType":"143","messageId":"144","endLine":91,"endColumn":69},{"ruleId":"145","severity":1,"message":"146","line":192,"column":97,"nodeType":"147","messageId":"148","endLine":192,"endColumn":99},{"ruleId":"145","severity":1,"message":"146","line":194,"column":97,"nodeType":"147","messageId":"148","endLine":194,"endColumn":99},{"ruleId":"145","severity":1,"message":"146","line":253,"column":34,"nodeType":"147","messageId":"148","endLine":253,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":594,"column":20,"nodeType":"111","messageId":"151","endLine":594,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":651,"column":63,"nodeType":"147","messageId":"148","endLine":651,"endColumn":65},{"ruleId":"109","severity":1,"message":"152","line":48,"column":11,"nodeType":"111","messageId":"112","endLine":48,"endColumn":22},{"ruleId":"109","severity":1,"message":"118","line":66,"column":11,"nodeType":"111","messageId":"112","endLine":66,"endColumn":19},{"ruleId":"109","severity":1,"message":"129","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":21},{"ruleId":"109","severity":1,"message":"152","line":59,"column":13,"nodeType":"111","messageId":"112","endLine":59,"endColumn":24},{"ruleId":"109","severity":1,"message":"152","line":54,"column":11,"nodeType":"111","messageId":"112","endLine":54,"endColumn":22},{"ruleId":"109","severity":1,"message":"118","line":72,"column":11,"nodeType":"111","messageId":"112","endLine":72,"endColumn":19},{"ruleId":"109","severity":1,"message":"118","line":19,"column":19,"nodeType":"111","messageId":"112","endLine":19,"endColumn":27},{"ruleId":"109","severity":1,"message":"129","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":21},"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'Search' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'response' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"153","text":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"'Redirect' is defined but never used.","'Form' is defined but never used.","'incidentId' is assigned a value but never used.","'requestPayload' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"157","text":"158"},"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'retVal' is already defined.","redeclared","'tableHeader' is assigned a value but never used.",[721,730],"\r\n      .","no-global-assign","no-unsafe-negation",[66,79],""]
=======
[{"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\index.js":"1","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\App.js":"2","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\signup.js":"3","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\login.js":"4","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\resetPassword.js":"5","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\dashboard.js":"6","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\reportIncident.js":"7","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\_helpers\\PrivateRoute.js":"8","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\Search.js":"9","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\CreateCategory.js":"10","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\EditUser.js":"11","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\ListUsers.js":"12","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\ListCategories.js":"13","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\LogOut.js":"14","C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\_helpers\\axios.js":"15"},{"size":316,"mtime":1607371172808,"results":"16","hashOfConfig":"17"},{"size":5445,"mtime":1607389331383,"results":"18","hashOfConfig":"17"},{"size":4216,"mtime":1607371172819,"results":"19","hashOfConfig":"17"},{"size":3304,"mtime":1607389331387,"results":"20","hashOfConfig":"17"},{"size":1687,"mtime":1607371172813,"results":"21","hashOfConfig":"17"},{"size":12989,"mtime":1607389331384,"results":"22","hashOfConfig":"17"},{"size":7997,"mtime":1607389331388,"results":"23","hashOfConfig":"17"},{"size":866,"mtime":1607371172794,"results":"24","hashOfConfig":"17"},{"size":2637,"mtime":1607371172804,"results":"25","hashOfConfig":"17"},{"size":1311,"mtime":1607371172797,"results":"26","hashOfConfig":"17"},{"size":4082,"mtime":1607371172798,"results":"27","hashOfConfig":"17"},{"size":2463,"mtime":1607371172802,"results":"28","hashOfConfig":"17"},{"size":2073,"mtime":1607371172801,"results":"29","hashOfConfig":"17"},{"size":311,"mtime":1607371172803,"results":"30","hashOfConfig":"17"},{"size":414,"mtime":1607371172796,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u1dm3d",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\index.js",[],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\App.js",["62","63"],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\signup.js",[],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\login.js",["64","65"],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\resetPassword.js",[],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\dashboard.js",["66","67","68","69","70","71","72","73","74","75","76"],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\reportIncident.js",["77","78","79"],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\_helpers\\PrivateRoute.js",[],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\Search.js",["80","81"],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\CreateCategory.js",["82"],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\EditUser.js",[],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\ListUsers.js",["83","84"],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\ListCategories.js",["85","86"],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\components\\LogOut.js",[],"C:\\Users\\User\\Documents\\Test Projects\\issue-tracking-system\\frontend\\src\\_helpers\\axios.js",[],{"ruleId":"87","severity":1,"message":"88","line":14,"column":8,"nodeType":"89","messageId":"90","endLine":14,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":51,"column":9,"nodeType":"93","endLine":51,"endColumn":95},{"ruleId":"87","severity":1,"message":"94","line":22,"column":13,"nodeType":"89","messageId":"90","endLine":22,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":22,"column":75,"nodeType":"97","messageId":"98","endLine":22,"endColumn":76,"fix":"99"},{"ruleId":"87","severity":1,"message":"100","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":18},{"ruleId":"87","severity":1,"message":"101","line":7,"column":10,"nodeType":"89","messageId":"90","endLine":7,"endColumn":16},{"ruleId":"87","severity":1,"message":"102","line":7,"column":18,"nodeType":"89","messageId":"90","endLine":7,"endColumn":21},{"ruleId":"87","severity":1,"message":"103","line":7,"column":23,"nodeType":"89","messageId":"90","endLine":7,"endColumn":34},{"ruleId":"87","severity":1,"message":"104","line":7,"column":36,"nodeType":"89","messageId":"90","endLine":7,"endColumn":47},{"ruleId":"87","severity":1,"message":"105","line":7,"column":49,"nodeType":"89","messageId":"90","endLine":7,"endColumn":57},{"ruleId":"87","severity":1,"message":"106","line":33,"column":11,"nodeType":"89","messageId":"90","endLine":33,"endColumn":21},{"ruleId":"87","severity":1,"message":"94","line":201,"column":15,"nodeType":"89","messageId":"90","endLine":201,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":289,"column":53,"nodeType":"109","messageId":"110","endLine":289,"endColumn":55},{"ruleId":"107","severity":1,"message":"108","line":289,"column":90,"nodeType":"109","messageId":"110","endLine":289,"endColumn":92},{"ruleId":"87","severity":1,"message":"111","line":312,"column":11,"nodeType":"89","messageId":"90","endLine":312,"endColumn":25},{"ruleId":"87","severity":1,"message":"94","line":62,"column":19,"nodeType":"89","messageId":"90","endLine":62,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":160,"column":67,"nodeType":"109","messageId":"110","endLine":160,"endColumn":69},{"ruleId":"107","severity":1,"message":"108","line":160,"column":104,"nodeType":"109","messageId":"110","endLine":160,"endColumn":106},{"ruleId":"87","severity":1,"message":"112","line":54,"column":11,"nodeType":"89","messageId":"90","endLine":54,"endColumn":22},{"ruleId":"87","severity":1,"message":"94","line":72,"column":11,"nodeType":"89","messageId":"90","endLine":72,"endColumn":19},{"ruleId":"87","severity":1,"message":"94","line":17,"column":15,"nodeType":"89","messageId":"90","endLine":17,"endColumn":23},{"ruleId":"87","severity":1,"message":"112","line":53,"column":11,"nodeType":"89","messageId":"90","endLine":53,"endColumn":22},{"ruleId":"87","severity":1,"message":"94","line":71,"column":11,"nodeType":"89","messageId":"90","endLine":71,"endColumn":19},{"ruleId":"87","severity":1,"message":"112","line":46,"column":11,"nodeType":"89","messageId":"90","endLine":46,"endColumn":22},{"ruleId":"87","severity":1,"message":"94","line":64,"column":11,"nodeType":"89","messageId":"90","endLine":64,"endColumn":19},"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'response' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"113","text":"114"},"'Redirect' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","'Dropdown' is defined but never used.","'incidentId' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'requestPayload' is assigned a value but never used.","'tableHeader' is assigned a value but never used.",[716,725],"\r\n      ."]
>>>>>>> Stashed changes
